basePath: /
definitions:
  entities.CinemaAddressName:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  entities.CinemaCategory:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entities.CinemaCondition:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entities.CinemaHallType:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entities.CreateCinemaHall:
    properties:
      capacity:
        type: integer
      cinema_id:
        type: integer
      name:
        type: string
      type_id:
        type: integer
    type: object
  entities.CreateUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role_id:
        type: integer
      surname:
        type: string
    type: object
  entities.Director:
    properties:
      fio:
        type: string
      id:
        type: integer
    type: object
  entities.Error:
    properties:
      error:
        type: string
    type: object
  entities.FilmFull:
    properties:
      cast_list:
        items:
          type: string
        type: array
      description:
        type: string
      directors:
        items:
          type: string
        type: array
      duration_in_min:
        type: integer
      film_studio_name:
        type: string
      genres:
        items:
          type: string
        type: array
      id:
        type: integer
      name:
        type: string
      operators:
        items:
          type: string
        type: array
      photo:
        type: string
    type: object
  entities.FilmStudio:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entities.Genre:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entities.GetCinema:
    properties:
      address:
        type: string
      category:
        type: string
      condition:
        type: string
      description:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      photo:
        type: string
    type: object
  entities.GetCinemaHall:
    properties:
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
      type:
        type: string
    type: object
  entities.GetUser:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: string
      surname:
        type: string
    type: object
  entities.ID:
    properties:
      id:
        type: integer
    type: object
  entities.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entities.LoginUserResponse:
    properties:
      role:
        type: string
      token:
        type: string
    type: object
  entities.Operator:
    properties:
      fio:
        type: string
      id:
        type: integer
    type: object
  entities.Role:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entities.UpdateCinemaHall:
    properties:
      capacity:
        type: integer
      id:
        type: integer
      name:
        type: string
      type_id:
        type: integer
    type: object
info:
  contact: {}
  title: Kino API
  version: "1.0"
paths:
  /auth/cinema:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Название
        example: '"Кварц"'
        in: formData
        name: name
        required: true
        type: string
      - description: Описание
        example: '"Привет Подольск"'
        in: formData
        name: description
        required: true
        type: string
      - description: Фото кинотеатра
        in: formData
        name: photo
        type: file
      - description: Адрес
        example: '"Гевинская 9/29"'
        in: formData
        name: address
        required: true
        type: string
      - description: Контактная почта
        example: '"meow@meow.meow"'
        in: formData
        name: email
        required: true
        type: string
      - description: Контактный номер телефона
        example: '"+7(952'
        in: formData
        name: phone
        required: true
        type: string
      - description: ID состояния
        in: formData
        name: condition_id
        required: true
        type: integer
      - description: ID категории
        in: formData
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Кинотеатр успешно создан
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/entities.Error'
        "403":
          description: Недостаточно прав для запроса
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Создание кинотеатра
      tags:
      - Cinema
    put:
      consumes:
      - multipart/form-data
      parameters:
      - description: ID кинотеатра
        in: formData
        name: id
        required: true
        type: integer
      - description: Название
        example: '"Кварц"'
        in: formData
        name: name
        required: true
        type: string
      - description: Описание
        example: '"Привет Подольск"'
        in: formData
        name: description
        required: true
        type: string
      - description: Фото кинотеатра
        in: formData
        name: photo
        type: file
      - description: Адрес
        example: '"Гевинская 9/29"'
        in: formData
        name: address
        required: true
        type: string
      - description: Контактная почта
        example: '"meow@meow.meow"'
        in: formData
        name: email
        required: true
        type: string
      - description: Контактный номер телефона
        example: '"+7(952'
        in: formData
        name: phone
        required: true
        type: string
      - description: ID состояния
        in: formData
        name: condition_id
        required: true
        type: integer
      - description: ID категории
        in: formData
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Кинотеатр успешно создан
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/entities.Error'
        "403":
          description: Недостаточно прав для запроса
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Обновление кинотеатра
      tags:
      - Cinema
  /auth/cinema/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID кинотеатра
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Кинотеатр успешно удален
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "404":
          description: Кинотеатр не найден
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Удаление кинотеатра
      tags:
      - Cinema
  /auth/cinema/address_name:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Список всех названий и адресов кинотеатров
          schema:
            items:
              items:
                $ref: '#/definitions/entities.CinemaAddressName'
              type: array
            type: array
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех названий и адресов кинотеатров
      tags:
      - Cinema
  /auth/cinema/categories:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Список всех категорий кинотеатра
          schema:
            items:
              items:
                $ref: '#/definitions/entities.CinemaCategory'
              type: array
            type: array
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех категорий кинотеатра
      tags:
      - Cinema
  /auth/cinema/conditions:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Список всех состояний кинотеатра
          schema:
            items:
              items:
                $ref: '#/definitions/entities.CinemaCondition'
              type: array
            type: array
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех состояний кинотеатра
      tags:
      - Cinema
  /auth/cinema/hall/types:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Список всех типов зала кинотеатра
          schema:
            items:
              items:
                $ref: '#/definitions/entities.CinemaHallType'
              type: array
            type: array
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех типов зала кинотеатра
      tags:
      - CinemaHall
  /auth/cinema/halls/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID кинотеатра
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Залы кинотеатра успешно получены
          schema:
            items:
              $ref: '#/definitions/entities.GetCinemaHall'
            type: array
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "404":
          description: Зал не найден
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех залов кинотеатра по его ID
      tags:
      - CinemaHall
  /auth/cinema/halls/hall_id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID кинозала
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Залы кинотеатра успешно получены
          schema:
            $ref: '#/definitions/entities.GetCinemaHall'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "404":
          description: Зал не найден
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение зала по его ID
      tags:
      - CinemaHall
  /auth/cinema/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID кинотеатра
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Полная информация о кинотеатре получена
          schema:
            $ref: '#/definitions/entities.GetCinema'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "404":
          description: Зал не найден
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение полной информации о кинотеатре по его ID
      tags:
      - Cinema
  /auth/cinema_hall:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные кинозала
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.CreateCinemaHall'
      produces:
      - application/json
      responses:
        "200":
          description: Кинозал успешно создан
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/entities.Error'
        "403":
          description: Недостаточно прав для запроса
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Создание кинозала
      tags:
      - CinemaHall
    put:
      consumes:
      - application/json
      parameters:
      - description: Данные кинозала
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateCinemaHall'
      produces:
      - application/json
      responses:
        "200":
          description: Кинозал успешно создан
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/entities.Error'
        "403":
          description: Недостаточно прав для запроса
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Обновление кинозала
      tags:
      - CinemaHall
  /auth/cinema_hall/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID кинозала
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Кинозал успешно удален
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "404":
          description: Кинозал не найден
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Удаление кинозала
      tags:
      - CinemaHall
  /auth/directors:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Список всех режиссеров
          schema:
            items:
              $ref: '#/definitions/entities.Director'
            type: array
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех режиссеров
      tags:
      - Film
  /auth/film:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Все фильмы успешно получены
          schema:
            items:
              $ref: '#/definitions/entities.FilmFull'
            type: array
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех фильмов
      tags:
      - Film
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Название
        example: '"Оно"'
        in: formData
        name: name
        required: true
        type: string
      - description: Описание
        example: '"Сука клоун"'
        in: formData
        name: description
        required: true
        type: string
      - description: Фото фильма
        in: formData
        name: film_photo
        type: file
      - collectionFormat: csv
        description: Список актеров
        example: '"Райан Рейнольдс, Морена Баккарин"'
        in: formData
        items:
          type: string
        name: cast_list
        required: true
        type: array
      - description: ID киностудии
        in: formData
        name: film_studio_id
        required: true
        type: integer
      - description: Продолжительность фильма в минутах
        in: formData
        name: duration_in_min
        required: true
        type: integer
      - collectionFormat: csv
        description: ID режиссеров
        in: formData
        items:
          type: integer
        name: director_ids
        required: true
        type: array
      - collectionFormat: csv
        description: ID операторов
        in: formData
        items:
          type: integer
        name: operator_ids
        required: true
        type: array
      - collectionFormat: csv
        description: ID жанров
        in: formData
        items:
          type: integer
        name: genre_ids
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Фильм успешно создан
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/entities.Error'
        "403":
          description: Недостаточно прав для запроса
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Создание фильма
      tags:
      - Film
    put:
      consumes:
      - multipart/form-data
      parameters:
      - description: ID фильма
        in: formData
        name: id
        required: true
        type: integer
      - description: Название
        in: formData
        name: name
        required: true
        type: string
      - description: Описание
        in: formData
        name: description
        required: true
        type: string
      - description: Фото фильма
        in: formData
        name: film_photo
        type: file
      - collectionFormat: csv
        description: Список актеров
        in: formData
        items:
          type: string
        name: cast_list
        required: true
        type: array
      - description: ID киностудии
        in: formData
        name: film_studio_id
        required: true
        type: integer
      - description: Продолжительность фильма в минутах
        in: formData
        name: duration_in_min
        required: true
        type: integer
      - collectionFormat: csv
        description: ID режиссеров
        in: formData
        items:
          type: integer
        name: director_ids
        required: true
        type: array
      - collectionFormat: csv
        description: ID операторов
        in: formData
        items:
          type: integer
        name: operator_ids
        required: true
        type: array
      - collectionFormat: csv
        description: ID жанров
        in: formData
        items:
          type: integer
        name: genre_ids
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Фильм успешно обновлен
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "404":
          description: Фильм не найден
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Обновление фильма
      tags:
      - Film
  /auth/film-studios:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Список всех киностудий
          schema:
            items:
              $ref: '#/definitions/entities.FilmStudio'
            type: array
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех киностудий
      tags:
      - Film
  /auth/film/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID фильма
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Фильм успешно удален
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "404":
          description: Фильм не найден
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Удаление фильма
      tags:
      - Film
  /auth/film/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID фильма
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Фильм по ID успешно получен
          schema:
            $ref: '#/definitions/entities.FilmFull'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение фильма по ID
      tags:
      - Film
  /auth/genres:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Список всех жанров
          schema:
            items:
              $ref: '#/definitions/entities.Genre'
            type: array
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех жанров
      tags:
      - Film
  /auth/operators:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Список всех операторов
          schema:
            items:
              $ref: '#/definitions/entities.Operator'
            type: array
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех операторов
      tags:
      - Film
  /auth/register:
    post:
      consumes:
      - application/json
      description: Создание пользователя с переданными данными (только для админа)
      parameters:
      - description: Данные пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь создан
          schema:
            $ref: '#/definitions/entities.ID'
        "400":
          description: Некорректные данные для входа
          schema:
            $ref: '#/definitions/entities.Error'
        "403":
          description: Недостаточно прав
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Создание нового пользователя
      tags:
      - User
  /auth/user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Пользователи получены
          schema:
            items:
              $ref: '#/definitions/entities.GetUser'
            type: array
        "400":
          description: Некорректные данные для входа
          schema:
            $ref: '#/definitions/entities.Error'
        "403":
          description: Недостаточно прав
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех пользователей
      tags:
      - User
  /auth/user/role:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Роли получены
          schema:
            items:
              $ref: '#/definitions/entities.Role'
            type: array
        "400":
          description: Некорректные данные для входа
          schema:
            $ref: '#/definitions/entities.Error'
        "403":
          description: Недостаточно прав
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Получение всех ролей
      tags:
      - User
  /login:
    post:
      consumes:
      - application/json
      description: Вход пользователя в систему с выдачей jwt и роли
      parameters:
      - description: Данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entities.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная аутентификация
          schema:
            $ref: '#/definitions/entities.LoginUserResponse'
        "400":
          description: Некорректные данные для входа
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/entities.Error'
      summary: Аутентификация пользователя
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
